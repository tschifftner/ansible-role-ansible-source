---
language: python
python: "2.7"
sudo: required
dist: trusty

env:
  - SITE=test.yml ANSIBLE_VERSION=1.8
  - SITE=test.yml ANSIBLE_VERSION=1.9.4

before_install:
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - pip install ansible==$ANSIBLE_VERSION

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

  # Install ansible-lint
  - pip install ansible-lint

script:
  # Check the role/playbook's syntax.
  - "ansible-playbook -i tests/inventory tests/$SITE --syntax-check"

  # Run the role/playbook with ansible-playbook.
  - "ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo"

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # ansible-lint checks for best practice
  - ansible-lint tests/$SITE

  # check ansible version cannot work as it is in a different environment
#  - >
#    [ $(ansible --version| cut -d ' ' -f2) == '2.0.0' ]
#    && (echo "Ansible version $(ansible --version| cut -d ' ' -f2): pass" && exit 0)
#    || (echo "Ansible version $(ansible --version| cut -d ' ' -f2): fail" && exit 1)

after_failure:
  - which ansible
  - files=`sudo find / -type f -name "ansible"`; for f in $files; do echo "${f}: $(${f} --version)"; done
  - ansible --version
  - ansible -i 127.0.0.1, -m setup all -c local

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6